// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/ericflo/gradientzoo/blobstorage"
)

type FakeBlobStorage struct {
	SaveStub        func(data []byte, filename, contentType string) error
	saveMutex       sync.RWMutex
	saveArgsForCall []struct {
		data        []byte
		filename    string
		contentType string
	}
	saveReturns struct {
		result1 error
	}
}

func (fake *FakeBlobStorage) Save(data []byte, filename string, contentType string) error {
	fake.saveMutex.Lock()
	fake.saveArgsForCall = append(fake.saveArgsForCall, struct {
		data        []byte
		filename    string
		contentType string
	}{data, filename, contentType})
	fake.saveMutex.Unlock()
	if fake.SaveStub != nil {
		return fake.SaveStub(data, filename, contentType)
	} else {
		return fake.saveReturns.result1
	}
}

func (fake *FakeBlobStorage) SaveCallCount() int {
	fake.saveMutex.RLock()
	defer fake.saveMutex.RUnlock()
	return len(fake.saveArgsForCall)
}

func (fake *FakeBlobStorage) SaveArgsForCall(i int) ([]byte, string, string) {
	fake.saveMutex.RLock()
	defer fake.saveMutex.RUnlock()
	return fake.saveArgsForCall[i].data, fake.saveArgsForCall[i].filename, fake.saveArgsForCall[i].contentType
}

func (fake *FakeBlobStorage) SaveReturns(result1 error) {
	fake.SaveStub = nil
	fake.saveReturns = struct {
		result1 error
	}{result1}
}

var _ blobstorage.BlobStorage = new(FakeBlobStorage)
